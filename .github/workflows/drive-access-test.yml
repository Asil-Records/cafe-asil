name: CafÃ© Asil Session Generator - Service Account

on:
  workflow_dispatch:
    inputs:
      playlist-name:
        description: 'Choose playlist type'
        required: true
        default: 'lofi-moments'
        type: choice
        options:
          - lofi-moments
          - sleepy-cafe
          - study&focus-mixes
          - morning-brew
      existing-session:
        description: 'Enter existing session name (leave empty to create new)'
        required: false
        default: ''

jobs:
  prepare-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies (rclone + ffmpeg)
        run: |
          sudo apt update
          sudo apt install -y ffmpeg
          curl https://rclone.org/install.sh | sudo bash || { echo "Failed to install rclone"; exit 1; }
          rclone version
          ffmpeg -version

      - name: Write Service Account JSON
        run: |
          cat > ./service-account.json <<EOF
          ${{ secrets.GDRIVE_SERVICE_ACCOUNT_JSON }}
          EOF

      - name: Configure rclone remote
        run: |
          rclone config create cafe-asil drive \
            service_account_file=./service-account.json \
            root_folder_id=${{ vars.GDRIVE_SHARED_FOLDER_ID }}

      - name: Prepare workflow variables
        id: vars
        run: |
          PLAYLIST_NAME="${{ github.event.inputs.playlist-name }}"
          EXISTING_SESSION="${{ github.event.inputs.existing-session }}"
          SESSION_DATE=$(date +%Y%m%d)

          if [ -n "$EXISTING_SESSION" ]; then
            TARGET_PATH="cafe-asil:music/${PLAYLIST_NAME}/${EXISTING_SESSION}"
            NEW_SESSION_CREATED=false
          else
            TARGET_PATH="cafe-asil:music/${PLAYLIST_NAME}/session-${SESSION_DATE}"
            NEW_SESSION_CREATED=true
          fi

          ASSETS_PATH="${TARGET_PATH}/assets"
          MERGED_FILE="merged-${PLAYLIST_NAME}-${SESSION_DATE}.mp3"

          echo "TARGET_PATH=${TARGET_PATH}" >> $GITHUB_ENV
          echo "ASSETS_PATH=${ASSETS_PATH}" >> $GITHUB_ENV
          echo "MERGED_FILE=${MERGED_FILE}" >> $GITHUB_ENV
          echo "NEW_SESSION_CREATED=${NEW_SESSION_CREATED}" >> $GITHUB_ENV

      - name: Ensure folders exist
        run: |
          echo "Ensuring required folders exist..."
          rclone mkdir "${TARGET_PATH}" || true
          rclone mkdir "${ASSETS_PATH}" || true

      - name: Download all session audio files
        run: |
          mkdir -p ./session_audio
          echo "Downloading MP3s from ${TARGET_PATH}..."
          rclone copy "${TARGET_PATH}" ./session_audio --include "*.mp3" --progress

      - name: Verify audio files and prepare list
        run: |
          echo "Preparing file list for merge..."
          ls -1 ./session_audio/*.mp3 > file_list.txt
          echo "File list created:"
          cat file_list.txt
          echo ""
          if [ ! -s file_list.txt ]; then
            echo "No MP3 files found â€” cannot proceed."
            exit 1
          fi
          # Create FFmpeg-friendly input list
          sed -i 's/^/file /' file_list.txt

      - name: Merge audio with FFmpeg
        run: |
          echo "Merging MP3s into one file..."
          ffmpeg -f concat -safe 0 -i file_list.txt -c copy merged_output.mp3 || { echo "FFmpeg merge failed"; exit 1; }
          echo "Merge completed successfully!"
          ls -lh merged_output.mp3

      - name: Upload merged file to Drive
        run: |
          echo "Uploading merged file to ${ASSETS_PATH}/${MERGED_FILE}..."
          rclone copyto merged_output.mp3 "${ASSETS_PATH}/${MERGED_FILE}" --progress
          echo "- Uploaded merged file successfully" >> $GITHUB_STEP_SUMMARY

      - name: Add completion summary
        run: |
          echo "### â˜• CafÃ© Asil Session Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Playlist: **${{ github.event.inputs.playlist-name }}**" >> $GITHUB_STEP_SUMMARY
          echo "- Session Path: **${TARGET_PATH}**" >> $GITHUB_STEP_SUMMARY
          echo "- Merged File: **${ASSETS_PATH}/${MERGED_FILE}**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Workflow completed successfully ðŸŽµ" >> $GITHUB_STEP_SUMMARY
